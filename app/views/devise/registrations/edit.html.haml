-#
-# Fairnopoly - Fairnopoly is an open-source online marketplace.
-# Copyright (C) 2013 Fairnopoly eG
-#
-# This file is part of Fairnopoly.
-#
-# Fairnopoly is free software: you can redistribute it and/or modify
-# it under the terms of the GNU Affero General Public License as
-# published by the Free Software Foundation, either version 3 of the
-# License, or (at your option) any later version.
-#
-# Fairnopoly is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU Affero General Public License for more details.
-#
-# You should have received a copy of the GNU Affero General Public License
-# along with Fairnopoly.  If not, see <http://www.gnu.org/licenses/>.
-#


%h1 Profil bearbeiten

.Accordion.Accordion--activated.User-edit
  = semantic_form_for(@user,  :html => {multipart: true},:as => resource_name, :url => registration_path(resource_name)  , :builder => Fairtastic::FormBuilder) do |f|
    = f.semantic_errors
    = f.input_step :account, :default_step => true do

      .User--step

        %p
          %span.User--rightside= t('users.visibility.public')
          %strong.Meta--highlight
            = t('formtastic.labels.user.legal_entity') + ":"


          = current_user.is_a?(LegalEntity) ? t('users.legal_status.edit.legal_entity') : t('users.legal_status.edit.private_user')

      .User--step
        %p
          %span.User--rightside= t('users.visibility.public')
          %strong.Meta--highlight
            = t('formtastic.labels.user.nickname') + ":"
          = current_user.nickname
      .User--step
        %p

          %span.User--rightside= t('users.visibility.private')
          %strong.Meta--highlight
            = t('formtastic.labels.user.customer_number') + ":"
          = current_user.customer_nr
      .User--step
        %p
          %span.User--rightside= t('users.visibility.public')
          %strong.Meta--highlight= t('formtastic.labels.user.image') + ":"
          = image_tag(@user.image_url(:thumb), :class => "img-polaroid ")
          = f.semantic_fields_for :image do |image|
            = f.inputs do
              = image.input :image, label: false, as: :file

      .User--step
        %span.User--rightside= current_user.is_a?(LegalEntity) ? t('users.visibility.public') : t('users.visibility.private')

        %h3= t('users.login.title')
        = f.inputs do
          = f.input :email

      .User--step.User-edit-pw
        = f.input :password,  :label=> t('users.change_password'), :input_html => { :autocomplete => "off"}
        = f.input :password_confirmation
        = render :partial => "/devise/password_complexity"
        = f.input :current_password



    = f.input_step :contact do
      = f.inputs do

        .User--step
          %span.User--rightside= current_user.is_a?(LegalEntity) ? t('users.visibility.public') : t('users.visibility.private')
          - if current_user.is_a?(LegalEntity)
            %h3= t('users.form_titles.contact_person')
          = f.input :title,:required => true,:as => :select, :collection => [t('common.title.woman'),t('common.title.man')]
          = f.input :forename,:required => true
          = f.input :surname,:required => true
          - if current_user.is_a?(LegalEntity)
            = f.input :company_name
        .User--step
          %span.User--rightside= current_user.is_a?(LegalEntity) ? t('users.visibility.public') : t('users.visibility.private')
          %h3= t('users.form_titles.address')
          = f.input :country,:required => true,:as => :select, :collection => [t('users.countries.germany')]
          = f.input :street,:required => true
          = f.input :city,:required => true
          = f.input :zip, :required => true
          = f.input :phone
          = f.input :mobile
          = f.input :fax
    = f.input_step :profile, :tooltip => true do
      = f.inputs do
        .User--step
          %span.User--rightside= t('users.visibility.public')
          = f.input :about_me, :as => :text, :input_html => {:class => "tinymce"}
          = tinymce

    = f.input_step :payment_information do
      = f.inputs do

        .User--step
          %span.User--rightside= t('users.visibility.private')
          %h3= t('users.form_titles.banking_account')
          = f.input :bank_account_owner
          = f.input :bank_code
          = f.input :bank_name
          = f.input :bank_account_number

        .User--step
          %span.User--rightside= t('users.visibility.private')
          %h3= t('users.form_titles.paypal_account')
          = f.input :paypal_account


    - if current_user.is_a?(LegalEntity)
      = render :partial =>'/devise/registrations/edit_legal', :locals => {:f => f}
    = f.actions do
      = f.action :submit, :button_html => {:class => "Btn"}
