-#
-# Fairnopoly - Fairnopoly is an open-source online marketplace.
-# Copyright (C) 2013 Fairnopoly eG
-#
-# This file is part of Fairnopoly.
-#
-# Fairnopoly is free software: you can redistribute it and/or modify
-# it under the terms of the GNU Affero General Public License as
-# published by the Free Software Foundation, either version 3 of the
-# License, or (at your option) any later version.
-#
-# Fairnopoly is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU Affero General Public License for more details.
-#
-# You should have received a copy of the GNU Affero General Public License
-# along with Fairnopoly.  If not, see <http://www.gnu.org/licenses/>.
-#
.Libraries
  - if user_signed_in? && policy(@library).create?
    %h3= t('library.new')
    = semantic_form_for(@library,:url => user_libraries_path(current_user),:html => { :class => "form-vertical"}) do |f|
      = f.inputs do
        = f.input :name
      = f.actions do
        = f.action :submit , :value => t('library.create'), :button_html => {:class => "Btn"}
  .Accordion--activated
    - @libraries.each do |library|
      - unless library.new_record?
        = accordion_item "library"+library.id.to_s , :title => library.name  do
          %p.Libraries-settings-right
            - if policy(library).update?
              %a.Btn.Library-showsettings
                = t('common.actions.edit')
            - if policy(library).destroy?
              = link_to t('common.actions.destroy') , user_library_path(current_user.id, library.id.to_s) , :class => "Btn Btn--red" ,:confirm => t('library.delete_confirm', :name => library.name) , :method => :delete

          - if policy(library).update? || policy(library).destroy?
            - if library.public?
              %p= t 'library.visibility.public'
            - else
              %p= t 'library.visibility.private'




          - if policy(library).update?
            .Libraries-settings-clear
              = semantic_form_for(library, :url => user_library_path(@user.id,library.id.to_s), :html => {:class => "Library-settings"}) do |f|
                .Accordion-step
                  = f.inputs do
                    = f.input :name
                    = f.input :public, :label => false
                  = f.actions do
                    = f.action :submit, :label => :update, :button_html => {:class => "Btn"}
          - if library.library_elements.empty?
            %p.Libraries-settings-clear= t('library.no_products')
          - else
            .Library-ArticleList.Libraries-settings-clear
              %section.l-ArticleList
                - library.library_elements.each do |library_element|
                  %Article{:class => 'Article Article--teaser'}
                    - if policy(library_element).show?
                      = render :partial=>'/shared/show_article', :locals=>{ :article=> library_element.article}
                    - if policy(library_element).destroy?
                      = link_to t('common.actions.destroy'), user_library_element_path(@user,library_element) ,:method => :delete, :class => "Btn Btn--red", :style => "float:right;"
                    -# if policy(library_element).update?
                      -#= semantic_form_for(library_element, :url => user_library_element_path(@user,library_element)) do |f|
                        -#= f.input :library, :collection => current_user.libraries,  :include_blank => false , :label => false
                        -#= f.submit t('common.actions.move'), :class => "Btn"
